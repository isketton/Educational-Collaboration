# Generated by Django 5.0.6 on 2024-08-02 11:28

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=80, verbose_name='City')),
                ('state', models.CharField(max_length=80, verbose_name='State')),
                ('zip_code', models.CharField(max_length=12)),
                ('country', models.CharField(max_length=30, verbose_name='Country')),
                ('address', models.CharField(max_length=128, verbose_name='Address')),
            ],
        ),
        migrations.CreateModel(
            name='Announcements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('role', models.CharField(choices=[('staff', 'Staff'), ('parent', 'Parent'), ('student', 'Student')], max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateField(default=django.utils.timezone.now)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Parents',
            fields=[
                ('id', models.UUIDField(default="<module 'uuid' from '/usr/local/lib/python3.12/uuid.py'>", editable=False, primary_key=True, serialize=False)),
                ('phone', models.CharField(blank=True, max_length=60, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: 05999999999', regex='^(05)\\d{9}$')])),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolapp.address')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='parent_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Schools',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('grade_level', models.CharField(choices=[('E', 'Elementary'), ('M', 'Middle'), ('H', 'High')], default='N/A', max_length=1)),
                ('certified', models.BooleanField(default=False)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolapp.address')),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('employee_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(choices=[('PRINCIPAL', 'Principal'), ('TEACHER', 'Teacher'), ('ASSISTANT', 'Assistant'), ('COUNSELOR', 'Counselor')], default='Teacher', max_length=30)),
                ('department', models.CharField(choices=[('MATH', 'Math'), ('ENGLISH', 'English'), ('ADMIN', 'Admin'), ('SCIENCE', 'Science'), ('NOTHING', 'N/A')], default='N/A', max_length=30)),
                ('phone', models.CharField(blank=True, max_length=60, null=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: 05999999999', regex='^(05)\\d{9}$')])),
                ('school_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='schoolapp.schools')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='staff_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('student_id', models.UUIDField(default='<function uuid4 at 0xffff87bc2e80>', editable=False, primary_key=True, serialize=False)),
                ('grade_level', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10'), (11, '11'), (12, '12')])),
                ('date_of_birth', models.DateField(auto_now_add=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='schoolapp.address')),
                ('homeroom_teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolapp.staff')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='schoolapp.parents')),
                ('school_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='schoolapp.schools')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='student_account', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.CharField(max_length=30)),
                ('grades', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C'), ('D', 'D'), ('F', 'F')], max_length=1)),
                ('comment', models.CharField(max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolapp.staff')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolapp.students')),
            ],
        ),
        migrations.CreateModel(
            name='Clubs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('content', models.TextField()),
                ('teacher_id', models.ManyToManyField(to='schoolapp.staff')),
                ('students_id', models.ManyToManyField(to='schoolapp.students')),
            ],
        ),
        migrations.CreateModel(
            name='Assignments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('score', models.DecimalField(decimal_places=2, max_digits=5)),
                ('teacher_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolapp.staff')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='schoolapp.students')),
            ],
        ),
    ]
